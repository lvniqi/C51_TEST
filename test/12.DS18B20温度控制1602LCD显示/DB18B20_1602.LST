C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE DB18B20_1602
OBJECT MODULE PLACED IN DB18B20_1602.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DB18B20_1602.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******************************************************************
   2          /*                                                                *
   3          
   4          /*                                                                *
   5          /*                                                                *
   6          /******************************************************************/
   7          
   8          #include <reg52.h>
   9          #include <intrins.h>
  10          
  11          #define uchar unsigned char
  12          #define uint  unsigned int
  13          
  14          sbit DQ = P1^0;  //定义DS18B20端口DQ  
  15          sbit BEEP=P3^7 ; //蜂鸣器驱动线
  16          
  17          bit presence,flag;
  18          bit compare_th,compare_tl,alarm_on_off=0,temp_th,temp_tl;
  19          
  20          sbit LCD_RS = P2^2;             
  21          sbit LCD_RW = P2^1;
  22          sbit LCD_EN = P2^0;
  23          
  24          
  25          
  26          uchar code  cdis1[ ] = {"  READ_ROMCORD  "};
  27          uchar code  cdis2[ ] = {"                "};
  28          uchar code  cdis3[ ] = {" DS18B20  ERR0R "};
  29          uchar code  cdis4[ ] = {"  PLEASE CHECK  "};
  30          uchar code  cdis5[ ] = {" TEMP:          "};
  31          uchar code  cdis6[ ] = {"TH:     TL:     "};
  32          
  33          unsigned char data  temp_data[2] = {0x00,0x00};
  34          unsigned char data  temp_alarm[2] = {0x20,0x10};
  35          unsigned char data  display[5] =   {0x00,0x00,0x00,0x00,0x00}; //温度值显示
  36          unsigned char data  display1[3] =  {0x00,0x00,0x00}; //温度报警值显示
  37          
  38          unsigned char data  RomCode[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  39           
  40          unsigned char code  mytab1[8] = {0x0C,0x12,0x12,0x0C,0x00,0x00,0x00,0x00};
  41          unsigned char code  mytab2[8] = {0x01,0x1b,0x1d,0x19,0x1d,0x1b,0x01,0x00};//小喇叭
  42          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  43          
  44          unsigned char Temp,temp_comp,timecount,count;
  45          unsigned char  crc;
  46          void Disp_Temp_alarm(uchar addr,uchar num);
  47          void  spk(uchar addr);
  48          void set_temp_alarm();
  49          void temp_compare();
  50          void beep();
  51          /*******************************************************************/
  52          void delay1(int ms)
  53          {
  54   1         unsigned char y;
  55   1         while(ms--)
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 2   

  56   1         {
  57   2           for(y = 0; y<250; y++)
  58   2          {
  59   3            _nop_();
  60   3            _nop_();
  61   3            _nop_();
  62   3            _nop_();
  63   3          }
  64   2         }
  65   1      }
  66          
  67          /******************************************************************/
  68          /*                                                                */
  69          /*检查LCD忙状态                                                   */
  70          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。     */
  71          /*                                                                */
  72          /******************************************************************/ 
  73          
  74          bit lcd_busy()
  75           {                          
  76   1          bit result;
  77   1          LCD_RS = 0;
  78   1          LCD_RW = 1;
  79   1          LCD_EN = 1;
  80   1          delayNOP();
  81   1          result = (bit)(P0&0x80);
  82   1          LCD_EN = 0;
  83   1          return(result); 
  84   1       }
  85          
  86          /*******************************************************************/
  87          /*                                                                 */
  88          /*写指令数据到LCD                                                  */
  89          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  90          /*                                                                 */
  91          /*******************************************************************/
  92          void lcd_wcmd(uchar cmd)
  93          {                          
  94   1         while(lcd_busy());
  95   1          LCD_RS = 0;
  96   1          LCD_RW = 0;
  97   1          LCD_EN = 0;
  98   1          _nop_();
  99   1          _nop_(); 
 100   1          P0 = cmd;
 101   1          delayNOP();
 102   1          LCD_EN = 1;
 103   1          delayNOP();
 104   1          LCD_EN = 0;  
 105   1      }
 106          
 107          /*******************************************************************/
 108          /*                                                                 */
 109          /*写显示数据到LCD                                                  */
 110          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
 111          /*                                                                 */
 112          /*******************************************************************/
 113          void lcd_wdat(uchar dat)
 114          {                          
 115   1         while(lcd_busy());
 116   1          LCD_RS = 1;
 117   1          LCD_RW = 0;
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 3   

 118   1          LCD_EN = 0;
 119   1          P0 = dat;
 120   1          delayNOP();
 121   1          LCD_EN = 1;
 122   1          delayNOP();
 123   1          LCD_EN = 0; 
 124   1      }
 125          
 126          /*******************************************************************/
 127          /*                                                                 */
 128          /*自定义字符写入CGRAM                                              */
 129          /*                                                                 */
 130          /*******************************************************************/
 131          void  writetab()  
 132          {  
 133   1          unsigned char i;
 134   1          lcd_wcmd(0x40);            //写CGRAM
 135   1          for (i = 0; i< 8; i++)       
 136   1          lcd_wdat(mytab1[i]);
 137   1          for (i = 0; i< 8; i++)       
 138   1          lcd_wdat(mytab2[i]);    
 139   1      }
 140          
 141          /*******************************************************************/
 142          /*                                                                 */
 143          /*  LCD初始化设定                                                  */
 144          /*                                                                 */
 145          /*******************************************************************/
 146          void lcd_init()
 147          { 
 148   1          delay1(15);   
 149   1          lcd_wcmd(0x01);      //清除LCD的显示内容            
 150   1          lcd_wcmd(0x38);      //16*2显示，5*7点阵，8位数据
 151   1          delay1(5);
 152   1          lcd_wcmd(0x38);         
 153   1          delay1(5);
 154   1          lcd_wcmd(0x38);         
 155   1          delay1(5);
 156   1      
 157   1          lcd_wcmd(0x0c);      //显示开，关光标
 158   1          delay1(5);
 159   1          lcd_wcmd(0x06);      //移动光标
 160   1          delay1(5);
 161   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 162   1          delay1(5);
 163   1      
 164   1              writetab();               //自定义字符写入CGRAM
 165   1      }
 166          
 167          /*******************************************************************/
 168          /*                                                                 */
 169          /*  设定显示位置                                                   */
 170          /*                                                                 */
 171          /*******************************************************************/
 172          
 173          void lcd_pos(uchar pos)
 174          {                          
 175   1        lcd_wcmd(pos | 0x80);  //数据指针=80+地址变量
 176   1      }
 177          
 178          /*******************************************************************/
 179          /*                                                                 */
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 4   

 180          /*us级延时函数                                                     */
 181          /*                                                                 */
 182          /*******************************************************************/
 183          
 184          void Delay(unsigned int num)
 185          {
 186   1        while( --num );
 187   1      }
 188          
 189          /*******************************************************************/
 190          /*                                                                 */
 191          /*初始化ds1820                                                     */
 192          /*                                                                 */
 193          /*******************************************************************/
 194          Init_DS18B20(void)
 195          {  
 196   1           DQ = 1;      //DQ复位
 197   1           Delay(8);    //稍做延时
 198   1      
 199   1           DQ = 0;      //单片机将DQ拉低
 200   1           Delay(90);   //精确延时 大于 480us
 201   1      
 202   1           DQ = 1;       //拉高总线
 203   1           Delay(8);
 204   1      
 205   1           presence = DQ;    //如果=0则初始化成功 =1则初始化失败
 206   1           Delay(100);
 207   1           DQ = 1; 
 208   1           
 209   1           return(presence); //返回信号，0=presence,1= no presence
 210   1      }
 211          
 212          /*******************************************************************/
 213          /*                                                                 */
 214          /* 读一个字节                                                      */
 215          /*                                                                 */
 216          /*******************************************************************/
 217           ReadOneChar(void)
 218          {
 219   1         unsigned char i = 0;
 220   1         unsigned char dat = 0;
 221   1      
 222   1         for (i = 8; i > 0; i--)
 223   1         {
 224   2           DQ = 0; // 给脉冲信号
 225   2           dat >>= 1;
 226   2           DQ = 1; // 给脉冲信号
 227   2      
 228   2           if(DQ)
 229   2           dat |= 0x80;
 230   2           Delay(4);
 231   2         }
 232   1          return (dat);
 233   1      }
 234          
 235          /*******************************************************************/
 236          /*                                                                 */
 237          /* 写一个字节                                                      */
 238          /*                                                                 */
 239          /*******************************************************************/
 240           WriteOneChar(unsigned char dat)
 241          {
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 5   

 242   1        unsigned char i = 0;
 243   1        for (i = 8; i > 0; i--)
 244   1        {
 245   2          DQ = 0;
 246   2          DQ = dat&0x01;
 247   2          Delay(5);
 248   2      
 249   2          DQ = 1;
 250   2          dat>>=1;
 251   2        }
 252   1      }
 253          
 254          /*******************************************************************/
 255          /*                                                                 */
 256          /* 温度报警值写入DS18B20                                           */
 257          /*                                                                 */
 258          /*******************************************************************/
 259          Write_Temperature_alarm(void)
 260          {
 261   1          Init_DS18B20();
 262   1        
 263   1          WriteOneChar(0xCC);           //跳过读序号列号的操作 
 264   1          WriteOneChar(0x4e);           //将设定的温度报警值写入 DS18B20
 265   1              WriteOneChar(temp_alarm[0]);  //写TH
 266   1              WriteOneChar(temp_alarm[1]);  //写TL
 267   1          WriteOneChar(0x7f);           //12位精确度
 268   1       
 269   1              Init_DS18B20();
 270   1          WriteOneChar(0xCC);           //跳过读序号列号的操作 
 271   1          WriteOneChar(0x48);           //把暂存器里的温度报警值拷贝到EEROM
 272   1      }
 273          
 274          /*******************************************************************/
 275          /*                                                                 */
 276          /* 读取64位序列码                                                  */
 277          /*                                                                 */
 278          /*******************************************************************/
 279           Read_RomCord(void)
 280          {
 281   1         unsigned char j;
 282   1         Init_DS18B20();
 283   1        
 284   1         WriteOneChar(0x33);          // 读序列码的操作
 285   1         for (j = 0; j < 8; j++)
 286   1         {
 287   2           RomCode[j] = ReadOneChar() ; 
 288   2         }
 289   1      }
 290          
 291          /*******************************************************************/
 292          /*                                                                 */
 293          /*DS18B20的CRC8校验程序                                            */
 294          /*                                                                 */
 295          /*******************************************************************/
 296          uchar CRC8() 
 297          { 
 298   1         uchar i,x; uchar crcbuff;
 299   1         
 300   1         crc=0;
 301   1         for(x = 0; x <8; x++)
 302   1         {
 303   2          crcbuff=RomCode[x];
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 6   

 304   2          for(i = 0; i < 8; i++) 
 305   2           { 
 306   3            if(((crc ^ crcbuff)&0x01)==0) 
 307   3            crc >>= 1; 
 308   3             else { 
 309   4                    crc ^= 0x18;   //CRC=X8+X5+X4+1
 310   4                    crc >>= 1; 
 311   4                    crc |= 0x80; 
 312   4                  }         
 313   3            crcbuff >>= 1;       
 314   3               }
 315   2         }
 316   1           return crc;        
 317   1      }
 318          /*******************************************************************/
 319          /*                                                                 */
 320          /* 数据转换与显示                                                  */
 321          /*                                                                 */
 322          /*******************************************************************/
 323          
 324           Disp_RomCode(uchar H_num)
 325          {
 326   1         uchar j;
 327   1         
 328   1         if(H_num==1)
 329   1         lcd_pos(0x00); 
 330   1         if(H_num==2)
 331   1         lcd_pos(0x40);
 332   1           
 333   1         for(j=0;j<8;j++)
 334   1         {
 335   2          Temp = RomCode[j];
 336   2      
 337   2          display[0]=((Temp&0xf0)>>4);
 338   2          if(display[0]>9)
 339   2           { display[0]=display[0]+0x37;}
 340   2          else{display[0]=display[0]+0x30;}          
 341   2          lcd_wdat(display[0]);        //高位数显示 
 342   2      
 343   2          display[1]=(Temp&0x0f);
 344   2          if(display[1]>9)
 345   2           {display[1]=display[1]+0x37;}
 346   2          else {display[1]=display[1]+0x30;}           
 347   2          lcd_wdat(display[1]);        //低位数显示 
 348   2         }
 349   1      }        
 350          
 351          /*******************************************************************/
 352          /*                                                                 */
 353          /* 读取温度                                                        */
 354          /*                                                                 */
 355          /*******************************************************************/
 356           Read_Temperature(void)
 357          {
 358   1           uchar  i;
 359   1           TR0=0;                     //关中断,防止读数错误
 360   1           Init_DS18B20();
 361   1        
 362   1           WriteOneChar(0xCC);        //跳过读序号列号的操作
 363   1           WriteOneChar(0x44);        //启动温度转换
 364   1      
 365   1           Init_DS18B20();
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 7   

 366   1      
 367   1           WriteOneChar(0x55);         //匹配ROM命令
 368   1           for(i=0;i<8;i++)
 369   1           WriteOneChar(RomCode[i]);
 370   1      
 371   1           WriteOneChar(0xBE);         //读取温度寄存器
 372   1      
 373   1           temp_data[0] = ReadOneChar();   //温度低8位
 374   1           temp_data[1] = ReadOneChar();   //温度高8位
 375   1           temp_alarm[0] = ReadOneChar();  //温度报警TH
 376   1               temp_alarm[1] = ReadOneChar();  //温度报警TL
 377   1      
 378   1               temp_comp=((temp_data[0]&0xf0)>>4)|((temp_data[1]&0x0f)<<4);
 379   1                                         //取温度整数值
 380   1           TR0=1;        //开中断
 381   1      }
 382          /*******************************************************************/
 383          /*                                                                 */
 384          /* 数据转换与温度显示                                              */
 385          /*                                                                 */
 386          /*******************************************************************/
 387           Disp_Temperature()
 388          {
 389   1         uchar s=0;
 390   1         if(temp_data[1]>127)                  //温度为负值
 391   1         {                                        
 392   2          temp_data[0]=(~temp_data[0])+1;     //取反加一，将补码变成原码
 393   2          if((~temp_data[0])>=0xff)
 394   2          temp_data[1]=(~temp_data[1])+1;
 395   2          else temp_data[1]=~temp_data[1];
 396   2          s=1;
 397   2         }
 398   1              
 399   1         display[4]=temp_data[0]&0x0f;
 400   1         display[0]=(display[4]*10/16)+0x30;
 401   1        
 402   1         display[4]=((temp_data[0]&0xf0)>>4)|((temp_data[1]&0x0f)<<4);
 403   1         display[3]=display[4]/100+0x30;
 404   1         display[1]=display[4]%100;
 405   1         display[2]=display[1]/10+0x30;
 406   1         display[1]=display[1]%10+0x30;
 407   1      
 408   1          if(display[3]==0x30)        //高位为0，不显示
 409   1         { 
 410   2           display[3]=0x20;              
 411   2           if(display[2]==0x30)       //次高位为0，不显示
 412   2           display[2]=0x20;
 413   2         }
 414   1         if(s)
 415   1         display[3]=0x2d;            //显示负号
 416   1          
 417   1          lcd_pos(0x07);             
 418   1          lcd_wdat(display[3]);      //百位数显示             
 419   1          lcd_wdat(display[2]);      //十位数显示              
 420   1          lcd_wdat(display[1]);      //个位数显示  
 421   1          lcd_wdat('.');            
 422   1          lcd_wdat(display[0]);      //小数位数显示
 423   1              lcd_wdat(0x00);            //显示自定义字符
 424   1          lcd_wdat('C');             //显示C
 425   1      }        
 426          
 427          /*******************************************************************/
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 8   

 428          /*                                                                 */
 429          /* 蜂鸣器响一声                                                    */
 430          /*                                                                 */
 431          /*******************************************************************/
 432          void beep()
 433          {
 434   1          unsigned char y;
 435   1          for (y=0;y<100;y++)
 436   1          {
 437   2            Delay(70);
 438   2            BEEP=!BEEP;                //BEEP取反
 439   2          } 
 440   1          BEEP=1;                      //关闭蜂鸣器
 441   1              Delay(25000);
 442   1      }
 443          
 444          /*******************************************************************/
 445          /*                                                                 */
 446          /* ROMCORD 显示菜单                                                */
 447          /*                                                                 */
 448          /*******************************************************************/
 449          void  RomCode_Menu ()
 450          { 
 451   1          uchar  m;
 452   1          lcd_init();                //初始化LCD
 453   1       
 454   1          lcd_pos(0);                //设置显示位置为第一行
 455   1          for(m=0;m<16;m++)          //显示字符
 456   1          lcd_wdat(cdis1[m]);
 457   1           
 458   1          Read_RomCord();            //读取64位序列码
 459   1          CRC8();                    //CRC效验
 460   1          if(crc==0)                 //CRC效验正确
 461   1          {
 462   2                Disp_RomCode(2);             //显示64位序列码
 463   2          }
 464   1      }
 465          
 466          /*******************************************************************/
 467          /*                                                                 */
 468          /* DS18B20 ERROR 显示菜单                                          */
 469          /*                                                                 */
 470          /*******************************************************************/
 471          void  Error_Menu ()
 472          {
 473   1           uchar  m;
 474   1           lcd_init();                //初始化LCD 
 475   1              
 476   1               lcd_pos(0);                //设置显示位置为第一行的第1个字符
 477   1           for(m=0;m<16;m++) 
 478   1           lcd_wdat(cdis3[m]);        //显示字符
 479   1          
 480   1           lcd_pos(0x40);             //设置显示位置为第二行第1个字符
 481   1           for(m=0;m<16;m++) 
 482   1           lcd_wdat(cdis4[m]);        //显示字符
 483   1      }
 484          
 485          /*******************************************************************/
 486          /*                                                                 */
 487          /* DS18B20 正常显示菜单                                            */
 488          /*                                                                 */
 489          /*******************************************************************/
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 9   

 490          void  Natural_Menu ()
 491          {
 492   1         uchar  m;
 493   1         lcd_init();                //初始化LCD 
 494   1      
 495   1         lcd_pos(0);                //设置显示位置为第一行的第1个字符
 496   1         for(m=0;m<16;m++) 
 497   1         lcd_wdat(cdis5[m]);        //显示字符
 498   1      
 499   1         lcd_pos(0x40);             //设置显示位置为第二行第1个字符
 500   1         for(m=0;m<16;m++) 
 501   1         lcd_wdat(cdis6[m]);        //显示字符
 502   1      
 503   1         Read_Temperature();
 504   1         Disp_Temp_alarm(0x43,0);   //显示TH值
 505   1         Disp_Temp_alarm(0x4b,1);   //显示TL值
 506   1         Disp_Temperature();        //显示实时温度值
 507   1      }
 508          
 509          
 510          /*********************************************************/
 511          // 显示报警温度
 512          /*********************************************************/
 513          void Disp_Temp_alarm(uchar addr,uchar num)
 514          {   //0=TH,1=TL
 515   1         display1[2]=temp_alarm[num]/100+0x30;
 516   1         display1[0]=temp_alarm[num]%100;
 517   1         display1[1]=display1[0]/10+0x30;
 518   1         display1[0]=display1[0]%10+0x30;
 519   1      
 520   1          if(display1[2]==0x30)        //高位为0，不显示
 521   1          { 
 522   2            display1[2]=0x20;              
 523   2            if(display1[1]==0x30)      //次高位为0，不显示
 524   2            display1[1]=0x20;
 525   2          }
 526   1      
 527   1          lcd_pos(addr);
 528   1          lcd_wdat(display1[2]);        //百位数显示             
 529   1          lcd_wdat(display1[1]);        //十位数显示              
 530   1          lcd_wdat(display1[0]);        //个位数显示
 531   1      }    
 532          
 533          /**********************************************************/
 534          // Time0中断函数
 535          /**********************************************************/
 536          void Time0(void) interrupt 1 using 0
 537          {
 538   1         TH0=0x4c;        //50ms定时
 539   1         TL0=0x00;
 540   1         timecount++;
 541   1         if(timecount>9)
 542   1         {
 543   2          timecount=0;
 544   2          flag=~flag;         
 545   2         }
 546   1      }
 547          
 548          /*********************************************************/
 549          /*                                                       */
 550          /*小喇叭闪动                                             */
 551          /*                                                       */
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 10  

 552          /*********************************************************/
 553          void  spk(uchar addr)
 554          {
 555   1         if(flag)
 556   1         {
 557   2           lcd_pos(addr);
 558   2           lcd_wdat(0x01);      //小喇叭显示
 559   2         }
 560   1         else
 561   1         {
 562   2           lcd_pos(addr);
 563   2           lcd_wdat(0x20);      //清屏
 564   2         }
 565   1      }
 566          
 567          /*********************************************************/
 568          // 温度比较函数
 569          /*********************************************************/
 570          void temp_compare()
 571          {    
 572   1          if(temp_comp >= temp_alarm[0])      //比较 TH 值
 573   1           {
 574   2             compare_th=1;                    
 575   2               }
 576   1              else  compare_th=0;
 577   1      
 578   1          if(temp_comp < temp_alarm[1])        //比较 TL 值
 579   1               {
 580   2                 compare_tl=1;
 581   2               }
 582   1              else  compare_tl=0;
 583   1           
 584   1              if(compare_th)
 585   1               {
 586   2                 spk(0x46);            //小喇叭闪动
 587   2             if(!alarm_on_off)     //静音选择
 588   2                 beep();
 589   2                 count=temp_alarm[0];
 590   2               }
 591   1              else 
 592   1               {
 593   2             lcd_pos(0x46);
 594   2             lcd_wdat(0x20);
 595   2               }
 596   1              if(compare_tl)
 597   1               {
 598   2                 spk(0x4e);           //小喇叭闪动
 599   2             if(!alarm_on_off)    //静音选择
 600   2                 beep();
 601   2                 count=temp_alarm[1];
 602   2               }
 603   1              else 
 604   1               {
 605   2             lcd_pos(0x4e);
 606   2             lcd_wdat(0x20);
 607   2               }
 608   1      }   
 609          
 610          /*********************************************************/
 611          // 温度报警值闪动
 612          /*********************************************************/
 613          void  Set_tempalarm_Flash(uchar addr,uchar num)
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 11  

 614          {
 615   1         if(flag)
 616   1         {
 617   2           temp_alarm[num]=count;
 618   2           Disp_Temp_alarm(addr,num);  //显示温度报警值
 619   2         }
 620   1         else
 621   1         {
 622   2           lcd_pos(addr);
 623   2           lcd_wdat(0x20);
 624   2               lcd_wdat(0x20);
 625   2               lcd_wdat(0x20);
 626   2         }
 627   1      }
 628          
 629          
 630          /*******************************************************************/
 631          /*                                                                 */
 632          /* 主函数                                                          */
 633          /*                                                                 */
 634          /*******************************************************************/
 635          void main()
 636           {
 637   1              uchar  m;
 638   1              TMOD=0x01; TH0=0x4c; TL0=0x00;                          //50ms定时
 639   1              EA=1; ET0=1; TR0=1;
 640   1              Init_DS18B20();
 641   1              Write_Temperature_alarm();                                      //设定报警上下限温度值
 642   1              if(presence)
 643   1          {
 644   2              Error_Menu ();
 645   2                      do
 646   2                      {  
 647   3                              Init_DS18B20();
 648   3                              beep();
 649   3                      }
 650   2                      while(presence);
 651   2          }
 652   1          
 653   1              RomCode_Menu ();                                                //显示RomCode
 654   1              for(m=0;m<10;m++)
 655   1              Delay(50000);
 656   1          Natural_Menu ();                                                    //正常显示界面
 657   1              Delay(50000);
 658   1              while(1)
 659   1              {
 660   2                      Read_Temperature();                                             //读取当前温度
 661   2                      Delay(50000);
 662   2                      Disp_Temperature();                                             //更新当前温度
 663   2                      temp_compare();                                                 //温度上下限比较
 664   2                      if(compare_th)
 665   2                      {
 666   3                              Set_tempalarm_Flash(0x43,0);            //上限报警
 667   3                      }
 668   2                      if(compare_tl)
 669   2                      {
 670   3                              Set_tempalarm_Flash(0x4b,1);            //下限报警
 671   3                      }
 672   2        }//end of while(1)
 673   1      }  //end of main()
 674          
 675          
C51 COMPILER V7.10   DB18B20_1602                                                          06/29/2012 07:05:41 PAGE 12  

 676          /**********************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1273    ----
   CONSTANT SIZE    =    118    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
